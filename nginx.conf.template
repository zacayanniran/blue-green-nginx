events {
    worker_connections 1024;
}

http {
    upstream backend {
        # Blue/Green based on ACTIVE_POOL env
        least_conn;
        server blue:8080 max_fails=2 fail_timeout=5s backup=off;
        server green:8080 max_fails=2 fail_timeout=5s backup=on;
    }

    server {
        listen 80;
        server_name _;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-App-Pool $upstream_addr;
            
            # Retry on 5xx and timeouts
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_timeout 5s;
            proxy_next_upstream_tries 2;
        }

        # Health check endpoint
        location /healthz {
            access_log off;
            proxy_pass http://backend/healthz;
            proxy_set_header Host $host;
        }

        # Chaos endpoints (direct to specific pools)
        location /chaos {
            proxy_pass http://blue:8080/chaos;  # Grader calls Blue directly
        }
    }
}